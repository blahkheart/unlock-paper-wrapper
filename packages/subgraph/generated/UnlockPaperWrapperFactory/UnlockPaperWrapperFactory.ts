// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewWrap extends ethereum.Event {
  get params(): NewWrap__Params {
    return new NewWrap__Params(this);
  }
}

export class NewWrap__Params {
  _event: NewWrap;

  constructor(event: NewWrap) {
    this._event = event;
  }

  get wrapper(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lock(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UnlockPaperWrapperFactory extends ethereum.SmartContract {
  static bind(address: Address): UnlockPaperWrapperFactory {
    return new UnlockPaperWrapperFactory("UnlockPaperWrapperFactory", address);
  }

  dev(): Address {
    let result = super.call("dev", "dev():(address)", []);

    return result[0].toAddress();
  }

  try_dev(): ethereum.CallResult<Address> {
    let result = super.tryCall("dev", "dev():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  lockWraps(param0: Address): Address {
    let result = super.call("lockWraps", "lockWraps(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_lockWraps(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("lockWraps", "lockWraps(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateWrapperCall extends ethereum.Call {
  get inputs(): CreateWrapperCall__Inputs {
    return new CreateWrapperCall__Inputs(this);
  }

  get outputs(): CreateWrapperCall__Outputs {
    return new CreateWrapperCall__Outputs(this);
  }
}

export class CreateWrapperCall__Inputs {
  _call: CreateWrapperCall;

  constructor(call: CreateWrapperCall) {
    this._call = call;
  }

  get _lockAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateWrapperCall__Outputs {
  _call: CreateWrapperCall;

  constructor(call: CreateWrapperCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDevAddressCall extends ethereum.Call {
  get inputs(): SetDevAddressCall__Inputs {
    return new SetDevAddressCall__Inputs(this);
  }

  get outputs(): SetDevAddressCall__Outputs {
    return new SetDevAddressCall__Outputs(this);
  }
}

export class SetDevAddressCall__Inputs {
  _call: SetDevAddressCall;

  constructor(call: SetDevAddressCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDevAddressCall__Outputs {
  _call: SetDevAddressCall;

  constructor(call: SetDevAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
